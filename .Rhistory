"U"=runif(nyrs, min=0.01, max=0.99),
"g"=g_init
)
}
# init_fn()
# Initial List of Lists for Multiple Chains
init_ll <- lapply(1:1, function(id) init_fn(chain_id = id))
# STAN MODEL DATA
stan.data <- list("nyrs" = nyrs,
"a_min" = a_min,
"a_max" = a_max,
"A" = A,
"nRyrs" = nyrs + A - 1,
"A_obs" = as.matrix(A_obs[,2:5]),
"S_obs" = Esc$Esc/1000,
"H_obs" = Har$Harvest/1000,
"S_cv" = S_cv,
"H_cv" = H_cv,
"p_mat" = p_mat
)
# FIT STAN MODEL with time varying maturity
stan.fit.inform_R0_tvm <- stan(file = "SSSR_AR1.sigmaR0-inform.simple_gg.v2.stan",
model_name = "SSSR_AR1.sigmaR0-inform.v2",
data = stan.data,
chains = 1,
iter = 1000,
seed = 42,
control = list(adapt_delta = 0.99, max_treedepth = 20),
init=init_ll
)
simdata <- data.frame(id = rep(1:k, each = 1),
x = runif(n,min=0.01, max=0.99),
y = runif(n,min=0.01, max=0.99),
z = runif(n,min=0.01, max=0.99),
zz = runif(n,min=0.01, max=0.99))
g_init <- daply(simdata %>% mutate(id = as.integer(id)), "id",
function(df) df[1,c("x", "y", "z", "zz")]) %>% as.numeric %>% matrix(ncol=4)
# Initialize Model Parameters =======================================
init_fn <- function(chain_id=1) {
list(
"lnR"=abs(rnorm(nRyrs, mean=0, sd=5)),
"lnalpha"=abs(rnorm(1, mean=0, sd=1)),
"beta"=runif(1, min=0.01, max=9.99),
"sigma_R"=abs(rnorm(1, mean=0, sd=1)),
"sigma_R0"=abs(rnorm(1, mean=0, sd=1)),
"phi"=runif(1, min=-1, max=1),
"lnresid_0"=runif(1, min=-1, max=1),
"mean_ln_R0"=abs(rnorm(1, mean=0, sd=1)),
"U"=runif(nyrs, min=0.01, max=0.99),
"g"=g_init
)
}
# init_fn()
# Initial List of Lists for Multiple Chains
init_ll <- lapply(1:1, function(id) init_fn(chain_id = id))
# STAN MODEL DATA
stan.data <- list("nyrs" = nyrs,
"a_min" = a_min,
"a_max" = a_max,
"A" = A,
"nRyrs" = nyrs + A - 1,
"A_obs" = as.matrix(A_obs[,2:5]),
"S_obs" = Esc$Esc/1000,
"H_obs" = Har$Harvest/1000,
"S_cv" = S_cv,
"H_cv" = H_cv,
"p_mat" = p_mat
)
# FIT STAN MODEL with time varying maturity
stan.fit.inform_R0_tvm <- stan(file = "SSSR_AR1.sigmaR0-inform.simple_gg.v2.stan",
model_name = "SSSR_AR1.sigmaR0-inform.v2",
data = stan.data,
chains = 1,
iter = 1000,
seed = 42,
control = list(adapt_delta = 0.99, max_treedepth = 20),
init=init_ll
)
pairs(stan.fit.inform_R0_tvm, pars = c("lnalpha", "beta", "sigma_R", "sigma_R0", "phi", "mean_ln_R0","lnR[1]", "lnR[2]","p"))
summary(stan.fit.inform_R0_tvm, pars= c("p[2,1]","p[3,2]","p[4,3]","p[4,4]" ))$summary
summary(stan.fit.inform_R0_tvm, pars= c("p[2,1]","p[3,2]","p[4,3]","p[4,4]","gg[1,1]"" ))$summary
list_of_draws <- extract(stan.fit.inform_R0_tvm)
print(names(list_of_draws))
summary(stan.fit.inform_R0_tvm, pars= c("p[2,1]","p[3,2]","p[4,3]","p[4,4]","gg[1,1]" ))$summary
summary(stan.fit.inform_R0_tvm, pars= c("p[2,1]","p[3,2]","p[4,3]","p[4,4]","g[1,1]" ))$summary
summary(stan.fit.inform_R0_tvm, pars= c("p[2,1]","p[3,2]","p[4,3]","p[4,4]","g[1,1]","g[,1]"  ))$summary
summary(stan.fit.inform_R0_tvm, pars= c("p[2,1]","p[3,2]","p[4,3]","p[4,4]","g[1,1]","g[,1]"  ))$summary
summary(stan.fit.inform_R0_tvm, pars= c("p[2,1]","p[3,2]","p[4,3]","p[4,4]","g[1,1]","g[2,1]"  ))$summary
rstan:::rstudio_stanc("SSSR_AR1.sigmaR0-inform.simple_gg.v2.stan")
simdata <- data.frame(id = rep(1:k, each = 1),
x = runif(n,min=0.01, max=0.99),
y = runif(n,min=0.01, max=0.99),
z = runif(n,min=0.01, max=0.99),
zz = runif(n,min=0.01, max=0.99))
g_init <- daply(simdata %>% mutate(id = as.integer(id)), "id",
function(df) df[1,c("x", "y", "z", "zz")]) %>% as.numeric %>% matrix(ncol=4)
# Initialize Model Parameters =======================================
init_fn <- function(chain_id=1) {
list(
"lnR"=abs(rnorm(nRyrs, mean=0, sd=5)),
"lnalpha"=abs(rnorm(1, mean=0, sd=1)),
"beta"=runif(1, min=0.01, max=9.99),
"sigma_R"=abs(rnorm(1, mean=0, sd=1)),
"sigma_R0"=abs(rnorm(1, mean=0, sd=1)),
"phi"=runif(1, min=-1, max=1),
"lnresid_0"=runif(1, min=-1, max=1),
"mean_ln_R0"=abs(rnorm(1, mean=0, sd=1)),
"U"=runif(nyrs, min=0.01, max=0.99),
"g"=g_init
)
}
# init_fn()
# Initial List of Lists for Multiple Chains
init_ll <- lapply(1:1, function(id) init_fn(chain_id = id))
# STAN MODEL DATA
stan.data <- list("nyrs" = nyrs,
"a_min" = a_min,
"a_max" = a_max,
"A" = A,
"nRyrs" = nyrs + A - 1,
"A_obs" = as.matrix(A_obs[,2:5]),
"S_obs" = Esc$Esc/1000,
"H_obs" = Har$Harvest/1000,
"S_cv" = S_cv,
"H_cv" = H_cv,
"p_mat" = p_mat
)
# FIT STAN MODEL with time varying maturity
stan.fit.inform_R0_tvm <- stan(file = "SSSR_AR1.sigmaR0-inform.simple_gg.v2.stan",
model_name = "SSSR_AR1.sigmaR0-inform.v2",
data = stan.data,
chains = 1,
iter = 1000,
seed = 42,
control = list(adapt_delta = 0.99, max_treedepth = 20),
init=init_ll
)
pairs(stan.fit.inform_R0_tvm, pars = c("lnalpha", "beta", "sigma_R", "sigma_R0", "phi", "mean_ln_R0","lnR[1]", "lnR[2]","p"))
pairs(stan.fit.inform_R0_tvm, pars = c("lnalpha", "beta", "sigma_R", "sigma_R0", "phi", "mean_ln_R0","lnR[1]", "lnR[2]"))
# SUMMARIZE AND DIAGNOSE STAN MODEL
shinystan::launch_shinystan(stan.fit.inform_R0_tvm)
# Initialize Model Parameters =======================================
init_fn <- function(chain_id=1) {
list(
"lnR"=abs(rnorm(nRyrs, mean=0, sd=5)),
"lnalpha"=abs(rnorm(1, mean=0, sd=1)),
"beta"=runif(1, min=0.01, max=9.99),
"sigma_R"=abs(rnorm(1, mean=0, sd=1)),
"sigma_R0"=abs(rnorm(1, mean=0, sd=1)),
"phi"=runif(1, min=-1, max=1),
"lnresid_0"=runif(1, min=-1, max=1),
"mean_ln_R0"=abs(rnorm(1, mean=0, sd=1)),
"U"=runif(nyrs, min=0.01, max=0.99),
"g"=g_init
)
}
# init_fn()
# Initial List of Lists for Multiple Chains
init_ll <- lapply(1:4, function(id) init_fn(chain_id = id))
# STAN MODEL DATA
stan.data <- list("nyrs" = nyrs,
"a_min" = a_min,
"a_max" = a_max,
"A" = A,
"nRyrs" = nyrs + A - 1,
"A_obs" = as.matrix(A_obs[,2:5]),
"S_obs" = Esc$Esc/1000,
"H_obs" = Har$Harvest/1000,
"S_cv" = S_cv,
"H_cv" = H_cv,
"p_mat" = p_mat
)
# FIT STAN MODEL with time varying maturity
stan.fit.inform_R0_tvm <- stan(file = "SSSR_AR1.sigmaR0-inform.simple_gg.v2.stan",
model_name = "SSSR_AR1.sigmaR0-inform.v2",
data = stan.data,
chains = 4,
iter = 1000,
seed = 42,
control = list(adapt_delta = 0.99, max_treedepth = 20),
init=init_ll
)
summary(stan.fit.inform_R0_tvm, pars= c("lnalpha", "beta", "sigma_R", "sigma_R0", "phi", "mean_ln_R0","lnR[1]", "lnR[2]")
)$summary
pairs(stan.fit.inform_R0_tvm, pars = c("lnalpha", "beta", "sigma_R", "sigma_R0", "phi", "mean_ln_R0","lnR[1]", "lnR[2]"))
summary(stan.fit.inform_R0_tvm)$summary
summary(stan.fit.inform_R0_tvm,options(max.print=999999))$summary
summary(stan.fit.inform_R0_tvm,options(repr.matrix.max.rows=999999))$summary
summary(stan.fit.inform_R0_tvm,options(max.rows=999999))$summary
summary(stan.fit.inform_R0_tvm,options(max.print=999999))$summary
?optiopns
?options
rstan:::rstudio_stanc("SSSR_AR1.sigmaR0-inform.simple_gg.v2.stan")
# Initialize Model Parameters =======================================
init_fn <- function(chain_id=1) {
list(
"lnR"=abs(rnorm(nRyrs, mean=0, sd=5)),
"lnalpha"=abs(rnorm(1, mean=0, sd=1)),
"beta"=runif(1, min=0.01, max=9.99),
"sigma_R"=abs(rnorm(1, mean=0, sd=1)),
"sigma_R0"=abs(rnorm(1, mean=0, sd=1)),
"phi"=runif(1, min=-1, max=1),
"lnresid_0"=runif(1, min=-1, max=1),
"mean_ln_R0"=abs(rnorm(1, mean=0, sd=1)),
"U"=runif(nyrs, min=0.01, max=0.99),
"g"=g_init
)
}
# init_fn()
# Initial List of Lists for Multiple Chains
init_ll <- lapply(1:4, function(id) init_fn(chain_id = id))
# STAN MODEL DATA
stan.data <- list("nyrs" = nyrs,
"a_min" = a_min,
"a_max" = a_max,
"A" = A,
"nRyrs" = nyrs + A - 1,
"A_obs" = as.matrix(A_obs[,2:5]),
"S_obs" = Esc$Esc/1000,
"H_obs" = Har$Harvest/1000,
"S_cv" = S_cv,
"H_cv" = H_cv,
"p_mat" = p_mat
)
# FIT STAN MODEL with time varying maturity
stan.fit.inform_R0_tvm <- stan(file = "SSSR_AR1.sigmaR0-inform.simple_gg.v2.stan",
model_name = "SSSR_AR1.sigmaR0-inform.v2",
data = stan.data,
chains = 4,
iter = 1000,
seed = 42,
control = list(adapt_delta = 0.99, max_treedepth = 20),
init=init_ll
)
# Initialize Model Parameters =======================================
init_fn <- function(chain_id=1) {
list(
"lnR"=abs(rnorm(nRyrs, mean=0, sd=5)),
"lnalpha"=abs(rnorm(1, mean=0, sd=1)),
"beta"=runif(1, min=0.01, max=9.99),
"sigma_R"=abs(rnorm(1, mean=0, sd=1)),
"sigma_R0"=abs(rnorm(1, mean=0, sd=1)),
"phi"=runif(1, min=-1, max=1),
"lnresid_0"=runif(1, min=-1, max=1),
"mean_ln_R0"=abs(rnorm(1, mean=0, sd=1)),
"U"=runif(nyrs, min=0.01, max=0.99),
"g"=g_init
)
}
# init_fn()
# Initial List of Lists for Multiple Chains
init_ll <- lapply(1:1, function(id) init_fn(chain_id = id))
# STAN MODEL DATA
stan.data <- list("nyrs" = nyrs,
"a_min" = a_min,
"a_max" = a_max,
"A" = A,
"nRyrs" = nyrs + A - 1,
"A_obs" = as.matrix(A_obs[,2:5]),
"S_obs" = Esc$Esc/1000,
"H_obs" = Har$Harvest/1000,
"S_cv" = S_cv,
"H_cv" = H_cv,
"p_mat" = p_mat
)
# FIT STAN MODEL with time varying maturity
stan.fit.inform_R0_tvm <- stan(file = "SSSR_AR1.sigmaR0-inform.simple_gg.v2.stan",
model_name = "SSSR_AR1.sigmaR0-inform.v2",
data = stan.data,
chains = 1,
iter = 1000,
seed = 42,
control = list(adapt_delta = 0.99, max_treedepth = 20),
init=init_ll
)
rstan:::rstudio_stanc("SSSR_AR1.sigmaR0-inform.simple_gg.v2.stan")
# Initialize Model Parameters =======================================
init_fn <- function(chain_id=1) {
list(
"lnR"=abs(rnorm(nRyrs, mean=0, sd=5)),
"lnalpha"=abs(rnorm(1, mean=0, sd=1)),
"beta"=runif(1, min=0.01, max=9.99),
"sigma_R"=abs(rnorm(1, mean=0, sd=1)),
"sigma_R0"=abs(rnorm(1, mean=0, sd=1)),
"phi"=runif(1, min=-1, max=1),
"lnresid_0"=runif(1, min=-1, max=1),
"mean_ln_R0"=abs(rnorm(1, mean=0, sd=1)),
"U"=runif(nyrs, min=0.01, max=0.99),
"g"=g_init
)
}
# init_fn()
# Initial List of Lists for Multiple Chains
init_ll <- lapply(1:1, function(id) init_fn(chain_id = id))
# STAN MODEL DATA
stan.data <- list("nyrs" = nyrs,
"a_min" = a_min,
"a_max" = a_max,
"A" = A,
"nRyrs" = nyrs + A - 1,
"A_obs" = as.matrix(A_obs[,2:5]),
"S_obs" = Esc$Esc/1000,
"H_obs" = Har$Harvest/1000,
"S_cv" = S_cv,
"H_cv" = H_cv,
"p_mat" = p_mat
)
# FIT STAN MODEL with time varying maturity
stan.fit.inform_R0_tvm <- stan(file = "SSSR_AR1.sigmaR0-inform.simple_gg.v2.stan",
model_name = "SSSR_AR1.sigmaR0-inform.v2",
data = stan.data,
chains = 1,
iter = 1000,
seed = 42,
control = list(adapt_delta = 0.99, max_treedepth = 20),
init=init_ll
)
nRyrs
# Initialize Model Parameters =======================================
simdata <- data.frame(id = rep(1:nRyrs, each = 1),
x = runif(1,min=0.01, max=0.99),
y = runif(1,min=0.01, max=0.99),
z = runif(1,min=0.01, max=0.99),
zz = runif(1,min=0.01, max=0.99))
init_fn <- function(chain_id=1) {
list(
"lnR"=abs(rnorm(nRyrs, mean=0, sd=5)),
"lnalpha"=abs(rnorm(1, mean=0, sd=1)),
"beta"=runif(1, min=0.01, max=9.99),
"sigma_R"=abs(rnorm(1, mean=0, sd=1)),
"sigma_R0"=abs(rnorm(1, mean=0, sd=1)),
"phi"=runif(1, min=-1, max=1),
"lnresid_0"=runif(1, min=-1, max=1),
"mean_ln_R0"=abs(rnorm(1, mean=0, sd=1)),
"U"=runif(nyrs, min=0.01, max=0.99),
"g"=daply(simdata %>% mutate(id = as.integer(id)), "id",
function(df) df[1,c("x", "y", "z", "zz")]) %>% as.numeric %>% matrix(ncol=4)
)
}
# Initial List of Lists for Multiple Chains
init_ll <- lapply(1:1, function(id) init_fn(chain_id = id))
# STAN MODEL DATA
stan.data <- list("nyrs" = nyrs,
"a_min" = a_min,
"a_max" = a_max,
"A" = A,
"nRyrs" = nyrs + A - 1,
"A_obs" = as.matrix(A_obs[,2:5]),
"S_obs" = Esc$Esc/1000,
"H_obs" = Har$Harvest/1000,
"S_cv" = S_cv,
"H_cv" = H_cv
)
# FIT STAN MODEL with time varying maturity
stan.fit.inform_R0_tvm <- stan(file = "SSSR_AR1.sigmaR0-inform.simple_gg.v2.stan",
model_name = "SSSR_AR1.sigmaR0-inform.v2",
data = stan.data,
chains = 1,
iter = 1000,
seed = 42,
control = list(adapt_delta = 0.99, max_treedepth = 20),
init=init_ll
)
rstan:::rstudio_stanc("SSSR_AR1.sigmaR0-inform.simple_gg.v2.stan")
# FIT STAN MODEL with time varying maturity
stan.fit.inform_R0_tvm <- stan(file = "SSSR_AR1.t-vary-m.v1.stan",
model_name = "SSSR_AR1.t-vary-m.v1",
data = stan.data,
chains = 1,
iter = 1000,
seed = 42,
control = list(adapt_delta = 0.99, max_treedepth = 20),
init=init_ll
)
summary(stan.fit.inform_R0_tvm, pars= c("lnalpha", "beta", "sigma_R", "sigma_R0", "phi", "mean_ln_R0","lnR[1]", "lnR[2]")
)$summary
pairs(stan.fit.inform_R0_tvm, pars = c("lnalpha", "beta", "sigma_R", "sigma_R0", "phi", "mean_ln_R0","lnR[1]", "lnR[2]"))
# SUMMARIZE AND DIAGNOSE STAN MODEL
shinystan::launch_shinystan(stan.fit.inform_R0_tvm)
# Initial List of Lists for Multiple Chains
init_ll <- lapply(1:4, function(id) init_fn(chain_id = id))
# STAN MODEL DATA
stan.data <- list("nyrs" = nyrs,
"a_min" = a_min,
"a_max" = a_max,
"A" = A,
"nRyrs" = nyrs + A - 1,
"A_obs" = as.matrix(A_obs[,2:5]),
"S_obs" = Esc$Esc/1000,
"H_obs" = Har$Harvest/1000,
"S_cv" = S_cv,
"H_cv" = H_cv
)
# FIT STAN MODEL with time varying maturity
stan.fit.inform_R0_tvm <- stan(file = "SSSR_AR1.t-vary-m.v1.stan",
model_name = "SSSR_AR1.t-vary-m.v1",
data = stan.data,
chains = 4,
iter = 1000,
seed = 42,
init=init_ll
)
# FIT STAN MODEL with time varying maturity
stan.fit.inform_R0_tvm <- stan(file = "SSSR_AR1.t-vary-m.v1.stan",
model_name = "SSSR_AR1.t-vary-m.v1",
data = stan.data,
chains = 4,
iter = 1000,
seed = 42,
init=init_ll,
control = list(adapt_delta = 0.90, max_treedepth = 20)
)
# FIT STAN MODEL with time varying maturity
stan.fit.inform_R0_tvm <- stan(file = "SSSR_AR1.t-vary-m.v1.stan",
model_name = "SSSR_AR1.t-vary-m.v1",
data = stan.data,
chains = 4,
iter = 1000,
seed = 42,
init=init_ll,
control = list(adapt_delta = 0.95, max_treedepth = 20)
)
# SUMMARIZE AND DIAGNOSE STAN MODEL
shinystan::launch_shinystan(stan.fit.inform_R0_tvm)
# FIT STAN MODEL with time varying maturity
stan.fit.inform_R0_tvm <- stan(file = "SSSR_AR1.t-vary-m.v1.stan",
model_name = "SSSR_AR1.t-vary-m.v1",
data = stan.data,
chains = 4,
iter = 3000,
seed = 42,
init=init_ll,
control = list(adapt_delta = 0.95, max_treedepth = 20)
)
# SUMMARIZE AND DIAGNOSE STAN MODEL
shinystan::launch_shinystan(stan.fit.inform_R0_tvm)
# FIT STAN MODEL with time varying maturity
stan.fit.inform_R0_tvm <- stan(file = "SSSR_AR1.t-vary-m.v1.stan",
model_name = "SSSR_AR1.t-vary-m.v1",
data = stan.data,
chains = 4,
iter = 3000,
seed = 42,
init=init_ll,
control = list(adapt_delta = 0.99, max_treedepth = 20)
)
# SUMMARIZE AND DIAGNOSE STAN MODEL
shinystan::launch_shinystan(stan.fit.inform_R0_tvm)
require(rstan)
require(plyr)
require(tidyverse)
options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)
Esc <- read.csv('data/EscTab.csv') # escapement
Har <- read.csv('data/HarTab.csv') # harvest
S_cv <- rep(0.2,length(Esc$year)) # placeholder for CV on escapement observations
H_cv <- rep(0.05,length(Har$year)) # placeholder for CV on harvest observations
A_obs <- read.csv('data/AgeComps.csv') # age composition
a_min <- 4
a_max <- 7
nyrs <- length(Esc$year)
A <- a_max - a_min + 1
nRyrs <- nyrs + A - 1
# Initialize Model Parameters =======================================
simdata <- data.frame(id = rep(1:nRyrs, each = 1),
x = runif(1,min=0.01, max=0.99),
y = runif(1,min=0.01, max=0.99),
z = runif(1,min=0.01, max=0.99),
zz = runif(1,min=0.01, max=0.99))
init_fn <- function(chain_id=1) {
list(
"lnR"=abs(rnorm(nRyrs, mean=0, sd=5)),
"lnalpha"=abs(rnorm(1, mean=0, sd=1)),
"beta"=runif(1, min=0.01, max=9.99),
"sigma_R"=abs(rnorm(1, mean=0, sd=1)),
"sigma_R0"=abs(rnorm(1, mean=0, sd=1)),
"phi"=runif(1, min=-1, max=1),
"lnresid_0"=runif(1, min=-1, max=1),
"mean_ln_R0"=abs(rnorm(1, mean=0, sd=1)),
"U"=runif(nyrs, min=0.01, max=0.99),
"g"=daply(simdata %>% mutate(id = as.integer(id)), "id",
function(df) df[1,c("x", "y", "z", "zz")]) %>% as.numeric %>% matrix(ncol=4)
)
}
# Initial List of Lists for Multiple Chains
init_ll <- lapply(1:4, function(id) init_fn(chain_id = id))
# Run Stan Model ====================================================
# STAN MODEL DATA
stan.data <- list("nyrs" = nyrs,
"a_min" = a_min,
"a_max" = a_max,
"A" = A,
"nRyrs" = nyrs + A - 1,
"A_obs" = as.matrix(A_obs[,2:5]),
"S_obs" = Esc$Esc/1000,
"H_obs" = Har$Harvest/1000,
"S_cv" = S_cv,
"H_cv" = H_cv)
# FIT STAN MODEL
stan.fit <- stan(file = "SSSR_AR1-time-vary-mat.stan",
model_name = "SSSR_AR1-time-vary-mat",
data = stan.data,
chains = 4,
iter = 3000,
seed = 42,
init = init_ll,
thin = 2,
control = list(adapt_delta = 0.99, max_treedepth = 20))
# SUMMARIZE AND DIAGNOSE STAN MODEL
shinystan::launch_shinystan(stan.fit) # there is still some autocorrelation in D_scale (governs variability of age proportion vectors across cohorts), should try increasing iterations and thinning?
pairs(stan.fit, pars = c("lnalpha", "beta", "sigma_R", "sigma_R0", "phi", "mean_ln_R0","lnR[1]", "lnR[2]"))
summary(stan.fit, pars= c("lnalpha", "beta", "sigma_R", "sigma_R0", "phi", "mean_ln_R0","S_max", "S_eq", "S_msy", "U_msy"))$summary
